name: Build&Release

on:
  push:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-windows]

    steps:
    - uses: actions/checkout@v2
   
    - name: download artifacts
      uses: actions/download-artifact@v1
      with:
        name: uploads  
        
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest"
        prerelease: true
        title: "Development Build"
        files: |
                uploads/linux.zip
                uploads/windows.zip
    
    
  build-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev


      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        
      - name: Zip Files
        run: cd build/src && zip linux.zip lsystem && mv linux.zip ../..

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: uploads
          path: linux.zip

  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Zip Files
      run: cd build/src/Release/ && powershell Compress-Archive lsystem.exe windows.zip && mv windows.zip ../../..

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: uploads
        path: windows.zip


